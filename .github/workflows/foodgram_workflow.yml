name: Foodgram CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./backend/requirements.txt

    - name: Run Backend Tests
      env:
        DATABASE_URL: postgres://user:password@localhost:5432/foodgram
      run: |
        cd backend/
        python manage.py test

  frontend_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install frontend dependencies
      run: |
        cd frontend/
        npm install

    - name: Test frontend
      run: |
        cd frontend/
        npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: 
      - backend_tests
      - frontend_tests

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend Image
      uses: docker/build-push-action@v2
      with:
        context: ./backend/
        push: true
        tags: ddisson/foodgram_backend:latest

    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend/
        push: true
        tags: ddisson/foodgram_frontend:latest

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram
          sudo docker-compose pull
          sudo docker-compose down
          sudo docker-compose up -d

